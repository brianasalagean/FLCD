N = { program, declaration, declarationTemp, type1, arraydecl, type, stmtlist, stmt, simplstmt, assignstmt, expression, term, factor, iostmt, structstmt, ifstmt, ifTemp, whilestmt, condition, relation }
E = { prog, identifier, char, int, str, array, intconst, const, read, print, if, while, else, <, <=, ==, =, <>, >=, >, {, }, ;, +, -, *, /, (, ), [, ] }
S = program
P = {
  program -> prog { stmtlist },
  declaration -> identifier ( type ) declarationTemp,
  declarationTemp -> E | declaration | array,
  type1 -> char | int | str,
  arraydecl -> array [ intconst ] ( type1 ),
  type -> type1 | arraydecl,
  stmtlist -> stmt | stmt ; stmtlist,
  stmt -> simplstmt| structstmt,
  simplstmt -> assignstmt | iostmt | declaration,
  assignstmt -> identifier = expression,
  expression -> expression + term | expression - term | term,
  term -> term * factor | term / factor | factor,
  factor -> ( expression ) | identifier | const,
  iostmt -> read ( identifier ) | print ( identifier ) | print ( const ),
  structstmt -> stmtlist | ifstmt | whilestmt,
  ifstmt -> if condition { stmtlist } ifTemp,
  ifTemp -> E | else { stmtlist },
  whilestmt -> while condition { stmtlist },
  condition -> ( expression relation expression ),
  relation -> < | <= | == | <> | >= | >,
}